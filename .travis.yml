language: cpp
compiler:
  - gcc

before_install:
  # 'python-software-properties' provides add-apt-repository
  - sudo apt-get -y install python-software-properties
  # which is needed to add the ppa that has gcc 4.8 and boost 1.55
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo add-apt-repository -y ppa:boost-latest/ppa
  - sudo apt-get update
  # which is needed to install gcc 4.8 (and gcov)
  - sudo apt-get -y install gcc-4.8
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 50
  - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-4.8 50
  # and g++ 4.8
  - sudo apt-get -y install g++-4.8
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 50
  # grab a pre-built cmake 2.8.12 from s3
  - wget https://s3.amazonaws.com/kylo-pl-bucket/cmake_install.tar.bz2
  - tar xjvf cmake_install.tar.bz2 --strip 1 -C $HOME
  # Install doxygen
  - wget https://github.com/doxygen/doxygen/archive/Release_1_8_7.tar.gz -O $HOME/doxygen-1.8.7.tgz
  - pushd $HOME && tar xzf doxygen-1.8.7.tgz && cd $HOME/doxygen-Release_1_8_7 && ./configure > /dev/null && make > /dev/null && sudo make install > /dev/null && popd
  # Install dependencies of cfacter
  - sudo apt-get -y install libboost-filesystem1.55-dev libboost-program-options1.55-dev libboost-regex1.55-dev libboost-date-time1.55-dev libboost-thread1.55-dev libboost-log1.55-dev libboost-locale1.55-dev
  - wget https://yaml-cpp.googlecode.com/files/yaml-cpp-0.5.1.tar.gz -O $HOME/yaml-cpp-0.5.1.tgz
  - pushd $HOME && tar xzf yaml-cpp-0.5.1.tgz && cd $HOME/yaml-cpp-0.5.1 && cmake -DBUILD_SHARED_LIBS=ON . && make > /dev/null && sudo make install > /dev/null && popd
  # Install libblkid-dev
  - sudo apt-get -y install libblkid-dev
  # Install coveralls.io update utility
  - sudo pip install cpp-coveralls
  # Install cppcheck
  - sudo apt-get -y install cppcheck

script: if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then ./scripts/travis_target.sh ; fi

env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "dCRCeC2dsmMGjofFgCVaiIqQQ066iMU5IY5TvEHTY2mrTq7ORlo02qnnSNQYi8jPVYWaYJ9a3K1HkoD79daYP6DAUmD9/tL62FLORemdP7/AcgYC70gPRvvUwzVZUYLN4laewV5ivymeuCqnJMH5eZKwJOAPKJo1p9QgeUMIQ3M="

addons:
  coverity_scan:
    project:
      name: "puppetlabs/cfacter"
      description: "Build submitted via Travis CI"
    notification_email: michael.smith@puppetlabs.com
    build_command_prepend: "cmake -DCMAKE_BUILD_TYPE=Debug .; make clean"
    build_command:   "make -j 4"
    branch_pattern: coverity_scan
